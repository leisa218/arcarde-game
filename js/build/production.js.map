{"version":3,"sources":["../app.js"],"names":["Enemy","speed","sprite","y","Math","floor","random","x","prototype","update","dt","render","ctx","drawImage","Resources","get","Player","handleInput","e","player","level","allEnemies","i","enemy","push","console","log","document","addEventListener","allowedKeys","keyCode"],"mappings":";;AAAA;AACA,IAAIA,QAAQ,SAARA,KAAQ,CAASC,KAAT,EAAgB;AACxB;AACA;;AAEA;AACA;AACA,SAAKC,MAAL,GAAc,sBAAd;AACA;AACA,SAAKC,CAAL,GAAS,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAeC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,CAA3B,CAAf,CAAT;AACA;AACA,SAAKC,CAAL,GAAS,CAAC,CAAC,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiBH,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,CAA3B,CAAjB,CAAT;AACA;AACA;AACA;AACA,SAAKL,KAAL,GAAa,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgBG,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,CAA3B,CAAhB,CAAb;AAEH,CAhBD;;AAkBA;AACA;AACAN,MAAMQ,SAAN,CAAgBC,MAAhB,GAAyB,UAASC,EAAT,EAAa;AAClC;AACA;AACA;AACA,QAAG,KAAKH,CAAL,IAAU,GAAb,EAAkB;AACd,aAAKA,CAAL,GAAS,CAAC,GAAV;AACA,aAAKJ,CAAL,GAAS,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAeC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,CAA3B,CAAf,CAAT;AACH;AACD,SAAKC,CAAL,IAAU,KAAKN,KAAf;AAEH,CAVD;;AAYA;AACAD,MAAMQ,SAAN,CAAgBG,MAAhB,GAAyB,YAAW;AAChCC,QAAIC,SAAJ,CAAcC,UAAUC,GAAV,CAAc,KAAKb,MAAnB,CAAd,EAA0C,KAAKK,CAA/C,EAAkD,KAAKJ,CAAvD;AACH,CAFD;;AAIA;AACA;AACA;;AAEA,IAAIa,SAAS,SAATA,MAAS,GAAW;AACpB;AACA;;AAEA;AACA;AACA,SAAKd,MAAL,GAAc,qBAAd;;AAEA;AACA,SAAKK,CAAL,GAAS,GAAT;AACA,SAAKJ,CAAL,GAAS,GAAT;AACH,CAXD;;AAaAa,OAAOR,SAAP,CAAiBC,MAAjB,GAA0B,UAASC,EAAT,EAAa;AACnC;AACA;AACA;AACH,CAJD;;AAMAM,OAAOR,SAAP,CAAiBG,MAAjB,GAA0B,YAAW;AACjCC,QAAIC,SAAJ,CAAcC,UAAUC,GAAV,CAAc,KAAKb,MAAnB,CAAd,EAA0C,KAAKK,CAA/C,EAAkD,KAAKJ,CAAvD;AACH,CAFD;;AAIAa,OAAOR,SAAP,CAAiBS,WAAjB,GAA+B,UAASC,CAAT,EAAY;AACvC;AACA;AACA,QAAGA,MAAM,IAAT,EAAc;AACV,YAAG,KAAKf,CAAL,KAAW,CAAC,EAAf,EAAkB;AACd,iBAAKA,CAAL,GAAS,CAAC,EAAV;AACA;AACH,SAHD,MAGK;AACD,iBAAKA,CAAL,IAAS,EAAT;AACH;AACJ;AACD,QAAGe,MAAM,MAAT,EAAgB;AACZ,YAAG,KAAKf,CAAL,KAAW,GAAd,EAAkB;AACd,iBAAKA,CAAL,GAAS,GAAT;AACH,SAFD,MAEK;AACD,iBAAKA,CAAL,IAAS,EAAT;AACH;AACJ;AACD,QAAGe,MAAM,MAAT,EAAgB;AACZ,YAAG,KAAKX,CAAL,KAAW,CAAd,EAAgB;AACZ,iBAAKA,CAAL,GAAS,CAAT;AACH,SAFD,MAEK;AACD,iBAAKA,CAAL,IAAS,GAAT;AACH;AACJ;AACD,QAAGW,MAAM,OAAT,EAAiB;AACb,YAAG,KAAKX,CAAL,KAAW,GAAd,EAAkB;AACd,iBAAKA,CAAL,GAAS,GAAT;AACH,SAFD,MAEK;AACD,iBAAKA,CAAL,IAAS,GAAT;AACH;AACJ;AACD;AACA;AACH,CAlCD;;AAqCA;AACA;AACA;AACA,IAAMY,SAAS,IAAIH,MAAJ,EAAf;AACA,IAAMI,QAAQ,CAAd;;AAEA,IAAMC,aAAa,EAAnB;AACA,KAAK,IAAIC,IAAI,CAAb,EAAgBA,KAAKF,KAArB,EAA4BE,GAA5B,EAAiC;AAC/B,QAAIC,QAAO,IAAIvB,KAAJ,EAAX;AACA;AACAqB,eAAWG,IAAX,CAAgBD,KAAhB;AACD;AACDE,QAAQC,GAAR,CAAYL,UAAZ;AACA;;;AAGA;AACA;AACAM,SAASC,gBAAT,CAA0B,OAA1B,EAAmC,UAASV,CAAT,EAAY;AAC3C,QAAIW,cAAc;AACd,YAAI,MADU;AAEd,YAAI,IAFU;AAGd,YAAI,OAHU;AAId,YAAI;AAJU,KAAlB;;AAOAV,WAAOF,WAAP,CAAmBY,YAAYX,EAAEY,OAAd,CAAnB;AACH,CATD","file":"production.js","sourcesContent":["// Enemies our player must avoid\nvar Enemy = function(speed) {\n    // Variables applied to each of our instances go here,\n    // we've provided one for you to get started\n\n    // The image/sprite for our enemies, this uses\n    // a helper we've provided to easily load images\n    this.sprite = 'images/enemy-bug.png';\n    // take random line number for enemy\n    this.y = [65, 145, 240][Math.floor(Math.random() * 3)];\n    // random start position for enemy\n    this.x = [-100, 100, 200][Math.floor(Math.random() * 3)];\n    //this.x = -100;\n    // random speed for enemy\n    //this.speed = speed;\n    this.speed = [1, 2, 3, 4, 5][Math.floor(Math.random() * 5)];\n    \n};\n\n// Update the enemy's position, required method for game\n// Parameter: dt, a time delta between ticks\nEnemy.prototype.update = function(dt) {\n    // You should multiply any movement by the dt parameter\n    // which will ensure the game runs at the same speed for\n    // all computers.\n    if(this.x >= 500 ){\n        this.x = -100;\n        this.y = [65, 145, 240][Math.floor(Math.random() * 3)];\n    }\n    this.x += this.speed;\n    \n};\n\n// Draw the enemy on the screen, required method for game\nEnemy.prototype.render = function() {\n    ctx.drawImage(Resources.get(this.sprite), this.x, this.y);\n};\n\n// Now write your own player class\n// This class requires an update(), render() and\n// a handleInput() method.\n\nvar Player = function() {\n    // Variables applied to each of our instances go here,\n    // we've provided one for you to get started\n\n    // The image/sprite for our enemies, this uses\n    // a helper we've provided to easily load images\n    this.sprite = 'images/char-boy.png';\n\n    //position of player\n    this.x = 200;\n    this.y = 400;\n};\n\nPlayer.prototype.update = function(dt) {\n    // You should multiply any movement by the dt parameter\n    // which will ensure the game runs at the same speed for\n    // all computers.\n};\n\nPlayer.prototype.render = function() {\n    ctx.drawImage(Resources.get(this.sprite), this.x, this.y);\n};\n\nPlayer.prototype.handleInput = function(e) {\n    // check witch key is pressed and move player\n    // check if player touch border of game board and stop movement\n    if(e === 'up'){\n        if(this.y === -25){\n            this.y = -25;\n            // game won\n        }else{\n            this.y -=85;\n        }\n    }\n    if(e === 'down'){\n        if(this.y === 400){\n            this.y = 400;\n        }else{\n            this.y +=85;\n        }\n    }\n    if(e === 'left'){\n        if(this.x === 0){\n            this.x = 0;\n        }else{\n            this.x -=100;\n        }\n    }\n    if(e === 'right'){\n        if(this.x === 400){\n            this.x = 400;\n        }else{\n            this.x +=100;\n        }\n    }\n    // debuggin\n    //console.log('x = '+this.x, 'y ='+this.y);\n};\n\n\n// Now instantiate your objects.\n// Place all enemy objects in an array called allEnemies\n// Place the player object in a variable called player\nconst player = new Player();\nconst level = 7;\n \nconst allEnemies = [];\nfor (var i = 0; i <= level; i++) {\n  let enemy= new Enemy();   \n  //console.log(enemy);\n  allEnemies.push(enemy);\n}\nconsole.log(allEnemies);\n//const levelOne = allEnemies.push();\n\n\n// This listens for key presses and sends the keys to your\n// Player.handleInput() method. You don't need to modify this.\ndocument.addEventListener('keyup', function(e) {\n    var allowedKeys = {\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down'\n    };\n\n    player.handleInput(allowedKeys[e.keyCode]);\n});"]}